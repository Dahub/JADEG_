//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JADEG.Business
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Dungeon> Dungeon { get; set; }
        public virtual DbSet<Tile> Tile { get; set; }
        public virtual DbSet<TypeTile> TypeTile { get; set; }
        public virtual DbSet<Wall> Wall { get; set; }
        public virtual DbSet<LinkDungeonTile> LinkDungeonTile { get; set; }
    
        public virtual ObjectResult<SELECT_POSSIBLES_TILES_Result> SELECT_POSSIBLES_TILES(Nullable<int> x, Nullable<int> y, Nullable<int> dungeonId)
        {
            var xParameter = x.HasValue ?
                new ObjectParameter("x", x) :
                new ObjectParameter("x", typeof(int));
    
            var yParameter = y.HasValue ?
                new ObjectParameter("y", y) :
                new ObjectParameter("y", typeof(int));
    
            var dungeonIdParameter = dungeonId.HasValue ?
                new ObjectParameter("dungeonId", dungeonId) :
                new ObjectParameter("dungeonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_POSSIBLES_TILES_Result>("SELECT_POSSIBLES_TILES", xParameter, yParameter, dungeonIdParameter);
        }
    
        public virtual ObjectResult<Tile> GetPossiblesTiles(Nullable<int> x, Nullable<int> y, Nullable<int> dungeonId)
        {
            var xParameter = x.HasValue ?
                new ObjectParameter("x", x) :
                new ObjectParameter("x", typeof(int));
    
            var yParameter = y.HasValue ?
                new ObjectParameter("y", y) :
                new ObjectParameter("y", typeof(int));
    
            var dungeonIdParameter = dungeonId.HasValue ?
                new ObjectParameter("dungeonId", dungeonId) :
                new ObjectParameter("dungeonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tile>("GetPossiblesTiles", xParameter, yParameter, dungeonIdParameter);
        }
    
        public virtual ObjectResult<Tile> GetPossiblesTiles(Nullable<int> x, Nullable<int> y, Nullable<int> dungeonId, MergeOption mergeOption)
        {
            var xParameter = x.HasValue ?
                new ObjectParameter("x", x) :
                new ObjectParameter("x", typeof(int));
    
            var yParameter = y.HasValue ?
                new ObjectParameter("y", y) :
                new ObjectParameter("y", typeof(int));
    
            var dungeonIdParameter = dungeonId.HasValue ?
                new ObjectParameter("dungeonId", dungeonId) :
                new ObjectParameter("dungeonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tile>("GetPossiblesTiles", mergeOption, xParameter, yParameter, dungeonIdParameter);
        }
    }
}
